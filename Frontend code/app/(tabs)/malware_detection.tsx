import React, { useState } from 'react';
import { View, Text, TextInput, Button, StyleSheet, Image, Alert } from 'react-native';
import ParallaxScrollView from '@/components/ParallaxScrollView';
import { ThemedText } from '@/components/ThemedText';
import { ThemedView } from '@/components/ThemedView';
import { useColorScheme } from '@/hooks/useColorScheme';
import { Colors } from '@/constants/Colors';

const MalwareDetectionScreen: React.FC = () => {
    const [link, setLink] = useState('');
    const [detectionResult, setDetectionResult] = useState<string | null>(null);
    const [loading, setLoading] = useState(false);
    const colorScheme = useColorScheme();
  
    const handleDetectMalware = async () => {
        setLoading(true);
        try {
            const result = await detectMalware(link);
            setDetectionResult(result);
        } catch (error) {
            Alert.alert('Error', 'Failed to detect malware. Please try again later.');
        } finally {
            setLoading(false);
        }
    };
  
    const handleBack = () => {
      setDetectionResult(null);
      setLink('');
    };
  
    return (
      <ParallaxScrollView
        headerBackgroundColor={{ light: '#A1CEDC', dark: '#1D3D47' }}
        headerImage={
          <Image
            source={require('@/assets/images/partial-react-logo.png')}
            style={styles.reactLogo}
          />
        }>
        <ThemedView style={styles.titleContainer}>
          <ThemedText type="title">Char Malware Detection</ThemedText>
        </ThemedView>
        <View style={[styles.container, { backgroundColor: Colors[colorScheme ?? 'light'].background }]}>
          {detectionResult ? (
            <View>
              <Text style={[styles.resultText, { color: Colors[colorScheme ?? 'light'].text }]}>{detectionResult}</Text>
              <Button title="Back" onPress={handleBack} />
            </View>
          ) : (
            <View>
              <Text style={[styles.label, { color: Colors[colorScheme ?? 'light'].text }]}>Enter Suspicious Link:</Text>
              <TextInput
                style={[styles.input, { color: Colors[colorScheme ?? 'light'].text, borderColor: Colors[colorScheme ?? 'light'].border }]}
                value={link}
                onChangeText={setLink}
                placeholder="https://example.com"
                placeholderTextColor={Colors[colorScheme ?? 'light'].placeholder}
              />
              <Button title={loading ? 'Detecting...' : 'Detect'} onPress={handleDetectMalware} disabled={loading} />
            </View>
          )}
        </View>
      </ParallaxScrollView>
    );
  };

const styles = StyleSheet.create({
    reactLogo: {
        height: 178,
        width: 290,
        bottom: 0,
        left: 0,
        position: 'absolute',
    },
    titleContainer: {
        flexDirection: 'row',
        alignItems: 'center',
        gap: 8,
    },
    container: {
        flex: 1,
        padding: 16,
    },
    label: {
        fontSize: 16,
        marginBottom: 8,
    },
    input: {
        height: 40,
        borderWidth: 1,
        marginBottom: 16,
        padding: 8,
    },
    resultText: {
        fontSize: 18,
        textAlign: 'center',
        marginBottom: 16,
    },
});

const detectMalware = async (url: string) => {
  const apiKey = 'insert_your_api_key';
  const apiUrl = 'https://www.virustotal.com/vtapi/v2/url/report';
  const response = await fetch(`${apiUrl}?apikey=${apiKey}&resource=${url}`);
  const json = await response.json();
  if (json.response_code === 1) {
      return json.positives > 0 ? 'This site is dangerous!' : 'This site is safe.';
  } else {
      throw new Error('Failed to fetch detection result.');
  }
};

export default MalwareDetectionScreen;