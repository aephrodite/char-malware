const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
const port = process.env.PORT || 5000;

// Middleware
app.use(bodyParser.json());
app.use(cors());

// MongoDB connection
mongoose.connect(process.env.MONGODB_URI, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log('MongoDB connected'))
  .catch(err => console.log(err));

// Define a schema and model for reported links
const reportedLinkSchema = new mongoose.Schema({
  link: String,
  reportedBy: String,
  reportedAt: { type: Date, default: Date.now },
});

const ReportedLink = mongoose.model('ReportedLink', reportedLinkSchema);

// Routes
app.post('/report-url', async (req, res) => {
  const { link, reportedBy } = req.body;
  try {
    const newReport = new ReportedLink({ link, reportedBy });
    await newReport.save();
    res.status(201).send('Link reported successfully');
  } catch (error) {
    res.status(500).send('Failed to report link');
  }
});

app.listen(port, () => {
  console.log(`Server running on port ${port}`);
});
